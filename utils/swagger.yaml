openapi: 3.0.0
info:
  version: '1.0'
  title: Astranauts API 
  description: Adios!
  contact:
    name: Astranauts-Team
    url: https://kelanach.cyclic.app/
    email: mail@gmail.com
servers:
  - url: https://astranauts-api.onrender.com/
    description: Render Deployment Server
  - url: http://localhost:8889
    description: Node Local Server

tags:
  - name: Auth
    description: Authentication related operations
  - name: User
    description: User related operations
  - name: Truck
    description: Truck related operations
  - name: Tambang
    description: Tambang related operations
  - name: Stockpiles
    description: Stockpile related operations
  - name: Pelabuhan
    description: Pelabuhan related operations
  - name: Activities
    description: Activity related operations
  - name: Coals
    description: Coal related operations

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema: 
            type: object 
            properties: 
              errors: 
                type: booelan 
                example: true
              message: 
                type: string 
                example: Internal Server Error

    AccountNotHaveAccess:
      description: Account Doesn't Have Access
      content:
        application/json:
          schema: 
            type: object 
            properties: 
              errors: 
                type: boolean 
                example: true
              message: 
                type: string 
                example: Account Doesn't Have Access

    DataNotFound:
      description: Data Not Found
      content:
        application/json:
          schema: 
            type: object 
            properties:
              errors: 
                type: boolean
                example: true
              message: 
                type: string 
                example: Data Not Found

    DataInputNotValid:
      description: Input Not Valid
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: boolean
                example: true
              message:
                type: string
                example: Data not valid


paths:
# ! ------------------------ ---- ------------------------ ! #
# ! ------------------------ AUTH ------------------------ ! #
# ! ------------------------ ---- ------------------------ ! #
  /auth/login:
    post:
      summary: Login for user 
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success login 
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Success Login
                  data: 
                    type: object
                    properties:
                      token:
                        type: string 
                      token_type:
                        type: string
                        example: JWT
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'





# ! ------------------------ ---- ------------------------ ! #
# ! ------------------------ USERS ------------------------ ! #
# ! ------------------------ ---- ------------------------ ! #
  /users:
    get:
      summary: Get data users (admin only)
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number
        - in: query
          name: per_page
          schema:
            type: integer
          required: false
          description: Limit data per page
        - in: query
          name: is_active
          schema:
            type: integer
          required: false
          description: Get only active user and set 1 for true 
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Search data by username
        - in: query
          name: user_type
          schema:
            type: string
          required: false
          description: filter by user type (set admin || user-tambang || user-stockpile)
      responses:
        '200':
          description: Get users data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get users data
                  data: 
                    type: object
                    properties:
                      page:
                        type: integer 
                      per_page:
                        type: integer
                      total_data:
                        type: integer
                      users: 
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            username:
                              type: string
                            name:
                              type: string
                            role:
                              type: string
                            is_active:
                              type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    post:
      summary: Create new user by admin (role value = user-tambang || user-stockpile || admin)
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                name:
                  type: string
                role:
                  type: string 
                  default: user-tambang
      responses:
        '200':
          description: Success create new account
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Success create new account
                  data: 
                    type: object
                    properties:
                      username:
                        type: string 
                      name:
                        type: string
                      created_at:
                        type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'




  /users/self:
    get:
      summary: Get user data self info 
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: get user self info
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get user self info data
                  data: 
                    type: object
                    properties:
                      _id:
                        type: string 
                      username:
                        type: string
                      name:
                        type: string
                      role:
                        type: string 
                      is_active: 
                        type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '404':
          $ref: '#/components/schemas/DataNotFound'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    patch:
      summary: Edit user info (not implemented)
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                is_edit_info:
                  type: boolean
                  default: true
      responses:
        '200':
          description: success update user info
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'



  /users/self/password:  
    patch:
      summary: Edit user password (self) 
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password_now:
                  type: string
                new_password:
                  type: string
      responses:
        '200':
          description: success change user password
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'





  /users/{username}:
    get:
      summary: Get user data self info (admin only)
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: username
          schema:
            type: string
          required: true
          description: Username of user
      responses:
        '200':
          description: Get user data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: Get user data
                  data: 
                    type: object
                    properties:
                      _id:
                        type: string 
                      username:
                        type: string
                      name:
                        type: string
                      role:
                        type: string 
                      is_active:
                        type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '404':
          $ref: '#/components/schemas/DataNotFound'
        '500':
          $ref: '#/components/schemas/InternalServerError'





  
  /users/check-username:
    get:
      summary: check username availability for user
      tags:
        - User
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: username
          schema:
            type: string
          required: true
          description: Username of user need to check
      responses:
        '200':
          description: Success request
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                  data: 
                    type: object
                    properties:
                      available:
                        type: boolean
                      username:
                        type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'





# ! ------------------------ ---- ------------------------ ! #
# ! ------------------------ TRUCKS ------------------------ ! #
# ! ------------------------ ---- ------------------------ ! #
  /trucks:
    get:
      summary: Get data trucks (admin only)
      tags:
        - Truck
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number
        - in: query
          name: per_page
          schema:
            type: integer
          required: false
          description: Limit data per page
        - in: query
          name: is_active
          schema:
            type: string
          required: false
          description: Get only active truck and set true or false
      responses:
        '200':
          description: Get trucks data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get users data
                  data: 
                    type: object
                    properties:
                      page:
                        type: integer 
                      per_page:
                        type: integer
                      total_data:
                        type: integer
                      truck: 
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            weight_capacity:
                              type: integer
                            volume_capacity:
                              type: integer
                            is_active:
                              type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    post:
      summary: Create new truck data by admin 
      tags:
        - Truck
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                weight_capacity:
                  type: number
                volume_capacity:
                  type: number
      responses:
        '200':
          description: Success create new adata
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    patch:
      summary: edit truck data by admin 
      tags:
        - Truck
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_truck:
                  type: string
                weight_capacity:
                  type: number
                volume_capacity:
                  type: number
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /trucks/{id}:
    get:
      summary: Get data trucks (admin only)
      tags:
        - Truck
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Page number
      responses:
        '200':
          description: Get one truck data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get truck data
                  data: 
                    type: object
                    properties:
                      _id:
                        type: string
                      weight_capacity:
                        type: integer
                      volume_capacity:
                        type: integer
                      is_active:
                        type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /trucks/availability:
    patch:
      summary: edit truck is_active status data by admin 
      tags:
        - Truck
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_truck:
                  type: string
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'





# ! ------------------------ ---- ------------------------ ! #
# ! ------------------------ TAMBANG ------------------------ ! #
# ! ------------------------ ---- ------------------------ ! #
  /tambang:
    get:
      summary: Get data tambang (admin only)
      tags:
        - Tambang
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number
        - in: query
          name: per_page
          schema:
            type: integer
          required: false
          description: Limit data per page
        - in: query
          name: is_active
          schema:
            type: string
          required: false
          description: Get only active tambang and set true or false
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Search data tambang by lokasi/ nama_tambang
      responses:
        '200':
          description: Get tambang data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get tambang data
                  data: 
                    type: object
                    properties:
                      page:
                        type: integer 
                      per_page:
                        type: integer
                      total_data:
                        type: integer
                      tambang: 
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            nama_tambang:
                              type: string
                            lokasi:
                              type: string
                            longitude:
                              type: string
                            latitude:
                              type: string
                            jumlah_layer:
                              type: integer
                            is_active:
                              type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    post:
      summary: Create new tambang data by admin 
      tags:
        - Tambang
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_tambang:
                  type: string
                lokasi:
                  type: string
                longitude:
                  type: string
                latitude:
                  type: string
                jumlah_layer:
                  type: number
      responses:
        '200':
          description: Success create new data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    patch:
      summary: edit tambang data by admin 
      tags:
        - Tambang
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_tambang:
                  type: string
                nama_tambang:
                  type: string
                lokasi:
                  type: string
                longitude:
                  type: string
                latitude:
                  type: string
                jumlah_layer:
                  type: number
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /tambang/{id}:
    get:
      summary: Get data tambang (admin only)
      tags:
        - Tambang
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Page number
      responses:
        '200':
          description: Get one tambang data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get tambang data
                  data: 
                    type: object
                    properties:
                      _id:
                        type: string
                      nama_tambang:
                        type: string
                      lokasi:
                        type: string
                      longitude:
                        type: string
                      latitude:
                        type: string
                      jumlah_layer:
                        type: number
                      is_active:
                        type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /tambang/availability:
    patch:
      summary: edit tambang is_active status data by admin 
      tags:
        - Tambang
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_tambang:
                  type: string
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'





# ! ------------------------ ---- ------------------------ ! #
# ! ------------------------ STOCKPILES ------------------------ ! #
# ! ------------------------ ---- ------------------------ ! #
  /stockpiles:
    get:
      summary: Get data stockpiles (admin only)
      tags:
        - Stockpiles
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number
        - in: query
          name: per_page
          schema:
            type: integer
          required: false
          description: Limit data per page
        - in: query
          name: is_active
          schema:
            type: string
          required: false
          description: Get only active stockpiles and set true or false
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Search data stockpile by lokasi/ nama_stockpile
      responses:
        '200':
          description: Get stockpiles data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get users data
                  data: 
                    type: object
                    properties:
                      page:
                        type: integer 
                      per_page:
                        type: integer
                      total_data:
                        type: integer
                      stockpile: 
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            nama_stockpile:
                              type: string
                            lokasi:
                              type: string
                            longitude:
                              type: string
                            latitude:
                              type: string
                            total_capacity:
                              type: integer
                            max_capacity:
                              type: integer
                            is_active:
                              type: boolean
                            coal_id:
                              type: array
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    post:
      summary: Create new stockpiles data by admin 
      tags:
        - Stockpiles
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_stockpile:
                  type: string
                lokasi:
                  type: string
                longitude:
                  type: string
                latitude:
                  type: string
                total_capacity:
                  type: number
                max_capacity:
                  type: number
      responses:
        '200':
          description: Success create new data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    patch:
      summary: edit stockpiles data by admin 
      tags:
        - Stockpiles
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_stockpile:
                  type: string
                nama_stockpile:
                  type: string
                lokasi:
                  type: string
                longitude:
                  type: string
                latitude:
                  type: string
                total_capacity:
                  type: integer
                max_capacity:
                  type: integer
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /stockpiles/{id}:
    get:
      summary: Get data stockpiles (admin only)
      tags:
        - Stockpiles
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Page number
      responses:
        '200':
          description: Get one stockpiles data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get stockpile data
                  data: 
                    type: object
                    properties:
                      _id:
                        type: string
                      nama_stockpile:
                        type: string
                      lokasi:
                        type: string
                      longitude:
                        type: string
                      latitude:
                        type: string
                      total_capacity:
                        type: integer
                      max_capacity:
                        type: integer
                      is_active:
                        type: boolean
                      coal_id:
                        type: array
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /stockpiles/availability:
    patch:
      summary: edit stockpiles is_active status data by admin 
      tags:
        - Stockpiles
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_stockpile:
                  type: string
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'





# ! ------------------------ ---- ------------------------ ! #
# ! ------------------------ PELABUHAN ------------------------ ! #
# ! ------------------------ ---- ------------------------ ! #
  /pelabuhan:
    get:
      summary: Get data pelabuhan (admin only)
      tags:
        - Pelabuhan
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number
        - in: query
          name: per_page
          schema:
            type: integer
          required: false
          description: Limit data per page
        - in: query
          name: is_active
          schema:
            type: string
          required: false
          description: Get only active pelabuhan and set true or false
        - in: query
          name: search
          schema:
            type: string
          required: false
          description: Search data stockpile by lokasi/ nama_pelabuhan
      responses:
        '200':
          description: Get pelabuhan data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get pelabuhan data
                  data: 
                    type: object
                    properties:
                      page:
                        type: integer 
                      per_page:
                        type: integer
                      total_data:
                        type: integer
                      pelabuhan: 
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            nama_pelabuhan:
                              type: string
                            lokasi:
                              type: string
                            longitude:
                              type: string
                            latitude:
                              type: string
                            is_active:
                              type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    post:
      summary: Create new pelabuhan data by admin 
      tags:
        - Pelabuhan
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_pelabuhan:
                  type: string
                lokasi:
                  type: string
                longitude:
                  type: string
                latitude:
                  type: string
      responses:
        '200':
          description: Success create new data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    patch:
      summary: edit pelabuhan data by admin 
      tags:
        - Pelabuhan
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_pelabuhan:
                  type: string
                nama_pelabuhan:
                  type: string
                lokasi:
                  type: string
                longitude:
                  type: string
                latitude:
                  type: string
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /pelabuhan/{id}:
    get:
      summary: Get data pelabuhan (admin only)
      tags:
        - Pelabuhan
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Page number
      responses:
        '200':
          description: Get one pelabuhan data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get pelabuhan data
                  data: 
                    type: object
                    properties:
                      _id:
                        type: string
                      nama_pelabuhan:
                        type: string
                      lokasi:
                        type: string
                      longitude:
                        type: string
                      latitude:
                        type: string
                      is_active:
                        type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /pelabuhan/availability:
    patch:
      summary: edit pelabuhan is_active status data by admin 
      tags:
        - Pelabuhan
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_pelabuhan:
                  type: string
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'





# ! ------------------------ ---- ------------------------ ! #
# ! ------------------------ ACTIVITIES ------------------------ ! #
# ! ------------------------ ---- ------------------------ ! #
  /activities:
    get:
      summary: Get data activities (admin and user-tambang)
      tags:
        - Activities
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number
        - in: query
          name: per_page
          schema:
            type: integer
          required: false
          description: Limit data per page
        - in: query
          name: is_active
          schema:
            type: string
          required: false
          description: Get only active activities and set true or false
        - in: query
          name: is_deleted
          schema:
            type: string
          required: false
          description: Get Only deleted activities and set true
      responses:
        '200':
          description: Get activities data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get activities data
                  data: 
                    type: object
                    properties:
                      page:
                        type: integer 
                      per_page:
                        type: integer
                      total_data:
                        type: integer
                      activity: 
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            layer:
                              type: integer
                            waktu_mulai:
                              type: string
                            waktu_selesai:
                              type: string
                            is_active:
                              type: boolean
                            created_by:
                              type: object
                              properties:
                                _id:
                                  type: string
                                username:
                                  type: string
                                name:
                                  type: string
                            tambang:
                              type: object
                              properties:
                                _id:
                                  type: string
                                nama_tambang:
                                  type: string
                                lokasi:
                                  type: string
                                longitude:
                                  type: string
                                latitude:
                                  type: string
                                jumlah_layer:
                                  type: integer
                                is_active:
                                  type: boolean
                                is_deleted:
                                  type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    post:
      summary: Create new activities data by user-tambang 
      tags:
        - Activities
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_tambang:
                  type: string
                layer:
                  type: integer
      responses:
        '200':
          description: Success create new data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    patch:
      summary: edit activities data by user-tambang 
      tags:
        - Activities
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_activity:
                  type: string
                id_tambang: 
                  type: string
                layer:
                  type: integer
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /activities/{id}:
    get:
      summary: Get data activities (admin and user-tambang)
      tags:
        - Activities
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID activities
      responses:
        '200':
          description: Get one activities data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get activities data
                  data: 
                    type: object
                    properties:
                      _id:
                        type: string
                      layer:
                        type: integer
                      waktu_mulai:
                        type: string
                      waktu_selesai:
                        type: string
                      is_active:
                        type: boolean
                      created_by:
                        type: object
                        properties:
                          _id:
                            type: string
                          username:
                            type: string
                          name:
                            type: string
                      tambang:
                        type: object
                        properties:
                          _id:
                            type: string
                          nama_tambang:
                            type: string
                          lokasi:
                            type: string
                          longitude:
                            type: string
                          latitude:
                            type: string
                          jumlah_layer:
                            type: integer
                          is_active:
                            type: boolean
                          is_deleted:
                            type: boolean
                      coal_data:
                            type: array
                            items:
                              type: object
                              properties:
                                _id:
                                  type: string 
                                activity_id:
                                  type: string
                                cal_value:
                                  type: string
                                ash_cont:
                                  type: string
                                moist_cont:
                                  type: string
                                sulph_cont:
                                  type: string
                                fc_vm:
                                  type: string
                                is_deleted: 
                                  type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /activities/active:
    patch:
      summary: edit activities is_active status data by user-tambang 
      tags:
        - Activities
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_activity:
                  type: string
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /activities/delete:
    patch:
      summary: soft delete activities status data by user-tambang 
      tags:
        - Activities
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_activity:
                  type: string
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'





# ! ------------------------ ---- ------------------------ ! #
# ! ------------------------ COAL ------------------------ ! #
# ! ------------------------ ---- ------------------------ ! #
  /coals:
    get:
      summary: Get data coals (admin and user-tambang)
      tags:
        - Coals
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: false
          description: Page number
        - in: query
          name: per_page
          schema:
            type: integer
          required: false
          description: Limit data per page
        - in: query
          name: is_deleted
          schema:
            type: string
          required: false
          description: Get Only deleted coals and set true
      responses:
        '200':
          description: Get coals data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get coals data
                  data: 
                    type: object
                    properties:
                      page:
                        type: integer 
                      per_page:
                        type: integer
                      total_data:
                        type: integer
                      coal: 
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                            cal_value:
                              type: string
                            ash_cont:
                              type: string
                            moist_cont:
                              type: string
                            sulph_cont:
                              type: string
                            fc_vm:
                              type: string
                            is_deleted:
                              type: boolean
                            activity:
                              type: object
                              properties:
                                _id:
                                  type: string
                                created_by:
                                  type: string
                                id_tambang:
                                  type: string
                                layer:
                                  type: string
                                waktu_mulai:
                                  type: string
                                waktu_selesai:
                                  type: integer
                                is_active:
                                  type: boolean
                                is_deleted:
                                  type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    post:
      summary: Create new coals data by user-tambang 
      tags:
        - Coals
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activity_id:
                  type: string
                cal_value:
                  type: string
                ash_cont:
                  type: string
                moist_cont:
                  type: string
                sulph_cont:
                  type: string
                fc_vm:
                  type: string
      responses:
        '200':
          description: Success create new data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

    patch:
      summary: edit coals data by user-tambang 
      tags:
        - Coals
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_coal:
                  type: string
                activity_id:
                  type: string
                cal_value:
                  type: string
                ash_cont:
                  type: string
                moist_cont:
                  type: string
                sulph_cont:
                  type: string
                fc_vm:
                  type: string
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /coals/{id}:
    get:
      summary: Get data coals (admin and user-tambang)
      tags:
        - Coals
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID coals
      responses:
        '200':
          description: Get one coals data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: get coals data
                  data: 
                    type: object
                    properties:
                      _id:
                        type: string
                      cal_value:
                        type: string
                      ash_cont:
                        type: string
                      moist_cont:
                        type: string
                      sulph_cont:
                        type: string
                      fc_vm:
                        type: string
                      activity:
                        type: object
                        properties:
                          _id:
                            type: string
                          created_by:
                            type: object
                            properties:
                              _id:
                                type: string
                              username:
                                type: string
                              name:
                                type: string
                          layer:
                            type: integer
                          waktu_mulai:
                            type: string
                          waktu_Selesai:
                            type: string
                          is_active:
                            type: boolean
                          is_deleted:
                            type: boolean
                          tambang:
                            type: object
                            properties:
                              _id:
                                type: string
                              nama_tambang:
                                type: string
                              lokasi:
                                type: string
                              longitude:
                                type: string
                              latitude:
                                type: string
                              jumlah_layer:
                                type: integer
                              is_active:
                                type: boolean
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '500':
          $ref: '#/components/schemas/InternalServerError'

  /coals/delete:
    patch:
      summary: soft delete coals status data by user-tambang 
      tags:
        - Coals
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_activity:
                  type: string
      responses:
        '200':
          description: Success edit data
          content:  
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: boolean
                    example: false
                  message:
                    type: string
        '400':
          $ref: '#/components/schemas/DataInputNotValid'
        '401':
          $ref: '#/components/schemas/AccountNotHaveAccess'
        '500':
          $ref: '#/components/schemas/InternalServerError'